<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

	<select id="complexSearch" resultType="MemberDto">
		<!--  기본 조회  -->
			select * from member
		<!--  조건 구문 -->
		<where>
			<!-- 아이디(유사) -->
			<if test = "memberId != null">
				and instr(member_id, #{memberId}) > 0
			</if>
			<!-- 닉네임(유사) --> 
			<if test="memberNickname != null">
				and instr(member_nickname, #{memberNickname}) > 0 <!-- 0보다 크다는 건 위치가 있다는 것 -->
			</if>
			<!-- 이메일(유사) -->
			<if test="memberEmail != null">
				and instr(member_email, #{memberEmail}) > 0
			</if>
			<!-- 연락처(일치) -->
			<if test = "memberContact != null">
				and member_contact = #{memberContact}
			</if>
			<!-- 생년월일(일치) -->
			<if test = "memberBirth != null">
				and member_birth = #{memberBirth}
			</if>
			<!-- 등급(목록 포함) -->
			<if test="memberLevelList != null and memberLevelList.size() > 0"> <!-- 등급 목록이 존재한다면(등급이 몇 개 일지 모르니 forEach -->
				and member_level in 
				<foreach collection="memberLevelList" open="(" item="memberLevel" separator="," close=")">
					#{memberLevel}
				</foreach> 
			</if>
			<!-- 포인트(구간) --> <!-- 구간은 둘다있는경우, 최대만 있는경우, 최소만있는경우 총 세가지가 있음 -->
			<choose>
				<when test="memberPointMin != null and memberPointMax != null">
					and member_point between #{memberPointMin} and #{memberPointMax}
				</when>
				<when test="memberPointMin != null">
					<![CDATA[
						and member_point >= #{memberPointMin}
					]]>
				</when>
				<when test="memberPointMax != null">
					<![CDATA[
						and member_point <= #{memberPointMax}
					]]>
				</when>
			</choose>
			<!-- 가입 일자(구간) -->
				<choose>
				<when test="memberJoinBegin != null and memberJoinEnd != null">
					and member_join between 
						to_date(#{memberJoinBegin} || ' ' || '00:00:00', 'yyyy-mm-dd hh24:mi:ss')
						and
						to_date(#{memberJoinEnd} || ' ' || '23:59:59', 'yyyy-mm-dd hh24:mi:ss')
				</when>
				<when test="memberJoinBegin != null">
					<![CDATA[
						and member_join to_date(#{memberJoinBegin} || ' ' || '00:00:00', 'yyyy-mm-dd hh24:mi:ss')
					]]>
				</when>
				<when test="memberJoinEnd != null">
					<![CDATA[
						and member_join to_date(#{memberJoinEnd} || ' ' || '23:59:59', 'yyyy-mm-dd hh24:mi:ss')
					]]>
				</when>
				</choose>
				<!-- 로그인 일자(구간) -->
				<choose>
					<when test="memberLoginBegin != null and memberLoginEnd != null">
						and member_join between 
							to_date(#{memberLoginBegin} || ' ' || '00:00:00', 'yyyy-mm-dd hh24:mi:ss')
							and
							to_date(#{memberLoginEnd} || ' ' || '23:59:59', 'yyyy-mm-dd hh24:mi:ss')
					</when>
					<when test="memberLoginBegin != null">
						<![CDATA[
							and member_join >= to_date(#{memberLoginBegin} || ' ' || '00:00:00', 'yyyy-mm-dd hh24:mi:ss')
						]]>
					</when>
					<when test="memberLoginEnd != null">
						<![CDATA[
							and member_join <= to_date(#{memberLoginEnd} || ' ' || '23:59:59', 'yyyy-mm-dd hh24:mi:ss')
						]]>
					</when>
				</choose>
		</where>
	<!--  정렬 구문 -->
	<if test ="orderList != null and orderList.size() > 0">
		order by
		<foreach collection="orderList" item = "order" separator=",">${order}</foreach>
	</if>
	</select> 

</mapper>